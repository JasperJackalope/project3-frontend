{"ast":null,"code":"var _jsxFileName = \"/Users/danielboddicker/bootcamp/projects/03-project/project3-frontend/src/ThemeSwitcher.js\",\n  _s = $RefreshSig$();\nimport { useState } from \"react\";\nimport { Dropdown, DropdownToggle, DropdownMenu, DropdownItem } from \"reactstrap\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Theme = () => {\n  _s();\n  const [theme, setTheme] = useState(null);\n  const [dropdownOpen, setdropdownOpen] = useState(false);\n  const resetTheme = () => {\n    setTheme(null);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"mb-2\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: `text-capitalize h1 mb-4 w-100 text-center text-${theme ? theme.toLowerCase() : \"secondary\"}`,\n      children: `${theme || \"Default\"}`\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"d-flex justify-content-center p-5\",\n      children: /*#__PURE__*/_jsxDEV(Dropdown, {\n        isOpen: dropdownOpen,\n        toggle: () => setdropdownOpen(!dropdownOpen),\n        children: [/*#__PURE__*/_jsxDEV(DropdownToggle, {\n          color: theme,\n          caret: true,\n          children: \"Dropdown\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(DropdownMenu, {\n          children: [/*#__PURE__*/_jsxDEV(DropdownItem, {\n            onClick: () => setTheme(\"primary\"),\n            children: \"Primary Theme\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 34,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(DropdownItem, {\n            onClick: () => setTheme(\"danger\"),\n            children: \"Danger Theme\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 37,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(DropdownItem, {\n            onClick: () => setTheme(\"success\"),\n            children: \"Success Theme\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 40,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(DropdownItem, {\n            divider: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 43,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(DropdownItem, {\n            onClick: resetTheme,\n            children: \"Default Theme\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 44,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 17,\n    columnNumber: 5\n  }, this);\n};\n_s(Theme, \"Rvh6Fbd0EqAQXFhdJrmeHdBnscA=\");\n_c = Theme;\nexport default Theme;\nvar _c;\n$RefreshReg$(_c, \"Theme\");","map":{"version":3,"names":["useState","Dropdown","DropdownToggle","DropdownMenu","DropdownItem","jsxDEV","_jsxDEV","Theme","_s","theme","setTheme","dropdownOpen","setdropdownOpen","resetTheme","className","children","toLowerCase","fileName","_jsxFileName","lineNumber","columnNumber","isOpen","toggle","color","caret","onClick","divider","_c","$RefreshReg$"],"sources":["/Users/danielboddicker/bootcamp/projects/03-project/project3-frontend/src/ThemeSwitcher.js"],"sourcesContent":["import { useState } from \"react\";\nimport {\n  Dropdown,\n  DropdownToggle,\n  DropdownMenu,\n  DropdownItem,\n} from \"reactstrap\";\n\nconst Theme = () => {\n  const [theme, setTheme] = useState(null);\n  const [dropdownOpen, setdropdownOpen] = useState(false);\n  const resetTheme = () => {\n    setTheme(null);\n  };\n\n  return (\n    <div className=\"mb-2\">\n      <div\n        className={`text-capitalize h1 mb-4 w-100 text-center text-${\n          theme ? theme.toLowerCase() : \"secondary\"\n        }`}\n      >\n        {`${theme || \"Default\"}`}\n      </div>\n      <div className=\"d-flex justify-content-center p-5\">\n        <Dropdown\n          isOpen={dropdownOpen}\n          toggle={() => setdropdownOpen(!dropdownOpen)}\n        >\n          <DropdownToggle color={theme} caret>\n            Dropdown\n          </DropdownToggle>\n          <DropdownMenu>\n            <DropdownItem onClick={() => setTheme(\"primary\")}>\n              Primary Theme\n            </DropdownItem>\n            <DropdownItem onClick={() => setTheme(\"danger\")}>\n              Danger Theme\n            </DropdownItem>\n            <DropdownItem onClick={() => setTheme(\"success\")}>\n              Success Theme\n            </DropdownItem>\n            <DropdownItem divider />\n            <DropdownItem onClick={resetTheme}>Default Theme</DropdownItem>\n          </DropdownMenu>\n        </Dropdown>\n      </div>\n    </div>\n  );\n};\n\nexport default Theme;"],"mappings":";;AAAA,SAASA,QAAQ,QAAQ,OAAO;AAChC,SACEC,QAAQ,EACRC,cAAc,EACdC,YAAY,EACZC,YAAY,QACP,YAAY;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEpB,MAAMC,KAAK,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAClB,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGV,QAAQ,CAAC,IAAI,CAAC;EACxC,MAAM,CAACW,YAAY,EAAEC,eAAe,CAAC,GAAGZ,QAAQ,CAAC,KAAK,CAAC;EACvD,MAAMa,UAAU,GAAGA,CAAA,KAAM;IACvBH,QAAQ,CAAC,IAAI,CAAC;EAChB,CAAC;EAED,oBACEJ,OAAA;IAAKQ,SAAS,EAAC,MAAM;IAAAC,QAAA,gBACnBT,OAAA;MACEQ,SAAS,EAAG,kDACVL,KAAK,GAAGA,KAAK,CAACO,WAAW,CAAC,CAAC,GAAG,WAC/B,EAAE;MAAAD,QAAA,EAED,GAAEN,KAAK,IAAI,SAAU;IAAC;MAAAQ,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACrB,CAAC,eACNd,OAAA;MAAKQ,SAAS,EAAC,mCAAmC;MAAAC,QAAA,eAChDT,OAAA,CAACL,QAAQ;QACPoB,MAAM,EAAEV,YAAa;QACrBW,MAAM,EAAEA,CAAA,KAAMV,eAAe,CAAC,CAACD,YAAY,CAAE;QAAAI,QAAA,gBAE7CT,OAAA,CAACJ,cAAc;UAACqB,KAAK,EAAEd,KAAM;UAACe,KAAK;UAAAT,QAAA,EAAC;QAEpC;UAAAE,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAgB,CAAC,eACjBd,OAAA,CAACH,YAAY;UAAAY,QAAA,gBACXT,OAAA,CAACF,YAAY;YAACqB,OAAO,EAAEA,CAAA,KAAMf,QAAQ,CAAC,SAAS,CAAE;YAAAK,QAAA,EAAC;UAElD;YAAAE,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAc,CAAC,eACfd,OAAA,CAACF,YAAY;YAACqB,OAAO,EAAEA,CAAA,KAAMf,QAAQ,CAAC,QAAQ,CAAE;YAAAK,QAAA,EAAC;UAEjD;YAAAE,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAc,CAAC,eACfd,OAAA,CAACF,YAAY;YAACqB,OAAO,EAAEA,CAAA,KAAMf,QAAQ,CAAC,SAAS,CAAE;YAAAK,QAAA,EAAC;UAElD;YAAAE,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAc,CAAC,eACfd,OAAA,CAACF,YAAY;YAACsB,OAAO;UAAA;YAAAT,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAE,CAAC,eACxBd,OAAA,CAACF,YAAY;YAACqB,OAAO,EAAEZ,UAAW;YAAAE,QAAA,EAAC;UAAa;YAAAE,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAc,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACnD,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACP;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACR,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV,CAAC;AAACZ,EAAA,CAzCID,KAAK;AAAAoB,EAAA,GAALpB,KAAK;AA2CX,eAAeA,KAAK;AAAC,IAAAoB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}